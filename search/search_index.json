{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome reNgine reNgine is an automated reconnaissance framework meant information gathering during penetration testing of web applications. reNgine has pipeline of highly configurable reconnaissance steps. With the integration of various open source information gathering tools, reNgine , uses all or some of them depending upon the configuration and gathers the results at a single place. reNgine current capabilities reNgine capabilities Subdomain Discovery : Discovers all the subdomains using tools like sublist3r, subfinder, amass, assetfinder, etc. Port Scan : Use to identify the open ports on the subdomains that have been discovered. Currently reNgine uses naabu to check for open ports. We have plans to use masscan in the future. Directory and File Search : Uses dirsearch to discover the directories and files. Fetch all Endpoints : Fetches all the urls for each subdomains from various sources like Open Threat Exchange, Wayback machine, common crawl etc. reNgine uses gau , hakrawler to fetch the endpoints. Vulnerability Scan (Beta) : reNgine uses nuclei to perform the Vulnerability Scans on the targets. This documentation is designed for both Developers and Penetration Testers. I am a Developer I am a Pentester This documentation is currently under construction. Help me build this documentation . reNgine uses these tools and utilities, and would like to thank the developers for such awesome tools. reNgine would not have been possible without the usage of these tools. Thank you! Project Discovery nuclei httpx naabu subfinder OWASP amass Michael Henriksen aquatone Ahmed Aboul-Ela Sublist3r Tom Hudson assetfinder Corben Leo gau Luke Stephens hakrawler Mauro Soria dirsearch","title":"Home"},{"location":"#welcome","text":"","title":"Welcome"},{"location":"#rengine","text":"reNgine is an automated reconnaissance framework meant information gathering during penetration testing of web applications. reNgine has pipeline of highly configurable reconnaissance steps. With the integration of various open source information gathering tools, reNgine , uses all or some of them depending upon the configuration and gathers the results at a single place.","title":"reNgine"},{"location":"#rengine-current-capabilities","text":"reNgine capabilities Subdomain Discovery : Discovers all the subdomains using tools like sublist3r, subfinder, amass, assetfinder, etc. Port Scan : Use to identify the open ports on the subdomains that have been discovered. Currently reNgine uses naabu to check for open ports. We have plans to use masscan in the future. Directory and File Search : Uses dirsearch to discover the directories and files. Fetch all Endpoints : Fetches all the urls for each subdomains from various sources like Open Threat Exchange, Wayback machine, common crawl etc. reNgine uses gau , hakrawler to fetch the endpoints. Vulnerability Scan (Beta) : reNgine uses nuclei to perform the Vulnerability Scans on the targets. This documentation is designed for both Developers and Penetration Testers. I am a Developer I am a Pentester This documentation is currently under construction. Help me build this documentation . reNgine uses these tools and utilities, and would like to thank the developers for such awesome tools. reNgine would not have been possible without the usage of these tools. Thank you! Project Discovery nuclei httpx naabu subfinder OWASP amass Michael Henriksen aquatone Ahmed Aboul-Ela Sublist3r Tom Hudson assetfinder Corben Leo gau Luke Stephens hakrawler Mauro Soria dirsearch","title":"reNgine current capabilities"},{"location":"developer/","text":"For Developers Coming Soon","title":"Welcome"},{"location":"developer/#for-developers","text":"Coming Soon","title":"For Developers"},{"location":"pentester/install/","text":"For Penetration Testers This documentation is intended for Penetration Testers or anybody who will use reNgine for information gathering purpose. This document aims to provide detailed instructions on setting up and running the reNgine . For detailed instruction on how to use reNgine after setup has been provided in Usage Section . This document is divided into 2 parts: It is highly recommended that you follow each steps to avoid encountering any errors/issues during the setup. Prerequisites reNgine Installation Prerequisites reNgine uses several scripts and tools, they rely on different other tools to be installed like Go, python, etc and to avoid any dependency issues, we decided to use Docker. Using Docker will not only ease the dependency issues, but will also ease the installation steps. As a penetration tester, you need not focus much on solving the dependencies, installing required tools, etc. With few installation steps, you should be good to run reNgine . reNgine requires these tools to be installed before you begin any installation steps: Docker Docker provides very good documentation on how to install docker based on your Operating System. You can follow the documentation here. Docker installation on Ubuntu/Linux Distributions Warning The installation steps have been directly taken from Docker Guide with no modification. Update the apt package index and install the below packages sudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common Add Docker official GPG key curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Use the following commands to setup the stable repository sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" Finally install Docker Engine sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io Test the Docker by running docker command on your console/terminal. Docker installation on Windows Docker requires Docker Desktop to be installed on your Windows OS. Installing Docker Desktop is as easy as double clicking the InstallDocker.msi installer, downloaded from here . Docker installation on Mac OS Docker requires Docker Desktop to be installed on your Mac OS. Follow the instruction from Docker hub to install Docker on Mac OS . Docker installation on Windows WSL Nick Janetakis has a well written blog and a Video guide on how to install Docker on Windows Subsystem Linux . Please follow the video/blog guide on how to install Docker on WSL. Docker Compose If you're running Docker Desktop you can skip installing docker-compose as docker-compose comes along with Docker Desktop. This applies for both Windows and Mac OS users. If you're using Linux distributions or WSL, you will still need to install docker-compose and the installation steps are similar. Installing docker-compose on Linux systems Download the latest stable version of docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Apply executable permission sudo chmod +x /usr/local/bin/docker-compose Create a symbolic link sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Verify your installation by running docker-compose --version Info If curl is not working for some reason, there are alternate installation steps as well. You can use pip or install as a container. Follow the alternate installation steps . make make installation on Linux Distributions Install the latest version of make using sudo apt install make Although it is optional, build-essential package can also be installed which contains make utility. sudo apt install build-essential reNgine Installation Installing reNgine on your favourite VPS or on your local machine is pretty straight forward process. Installation instruction for VPS and local machine is similar and same steps can be followed. If you have met all the above Prerequisites , you can begin installing reNgine . Let's begin by cloning the reNgine . git clone https://github.com/yogeshojha/rengine cd rengine There are currently two different ways of installing reNgine . Using make Manually using docker-compose Using make is by far the easiest way to setup reNgine without encountering any errors. Using docker-compose is a tidious process and is only intended for development purpose. Unless otherwise you're developing reNgine , it is recommended that you use make to install reNgine . Installation steps using docker-compose can be found in Developer's section. dotenv file Before we begin installing reNgine, it is necessary to make changes to the dotenv file. You can edit the file using your favourite editor nano .env or vim .env The sample .env file can be found here . # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=mySecurePassword COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=IN STATE=Karnataka CITY=Bangalore Generating SSL Certificates reNgine runs on https unless otherwise used for development purpose. So using https is recommended. To generate the certificates you can use make certs Please note, while running any make command, you must be inside the rengine/ directory. Build reNgine To build the reNgine, use the following command make build The build process is a lengthy process and may take some time. Thanks to Baptiste MOINE for sending the PR that made build process so much simpler. Run reNgine Once the build process is successful, we're good to run reNgine. This can be done using below command make up reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address Registering an account The recent upgrade bring authentication feature on reNgine. You will need to create a username and password in order to login to the reNgine. To register reNgine, you will need to run the following command make username You will now be prompted with some personal details(optional), username and password. We highly recommend that you set a strong password for reNgine. You may now login to the reNgine web portal using the username and password that you just provided. Checking logs If you need to observe the logs, it can be done so by running the commmand make logs Note If you encounter any issues while setup or scan, we advice you to raise an issue in Github and attach the log. While raising any new issues on Github, it is also adviced that you to look for any open issues on Github as well. Stopping the reNgine If you wish to stop the reNgine, it can be done so by using the command make stop Restarting the reNgine reNgine can be restarted using the command make restart Removing all the reNgine Data If you wish to delete all your recon data, it can be done using Danger This is a irreversible process and once pruned, you may never get back your recon data. Use with caution. make prune","title":"For Penetration Testers"},{"location":"pentester/install/#for-penetration-testers","text":"This documentation is intended for Penetration Testers or anybody who will use reNgine for information gathering purpose. This document aims to provide detailed instructions on setting up and running the reNgine . For detailed instruction on how to use reNgine after setup has been provided in Usage Section . This document is divided into 2 parts: It is highly recommended that you follow each steps to avoid encountering any errors/issues during the setup. Prerequisites reNgine Installation","title":"For Penetration Testers"},{"location":"pentester/install/#prerequisites","text":"reNgine uses several scripts and tools, they rely on different other tools to be installed like Go, python, etc and to avoid any dependency issues, we decided to use Docker. Using Docker will not only ease the dependency issues, but will also ease the installation steps. As a penetration tester, you need not focus much on solving the dependencies, installing required tools, etc. With few installation steps, you should be good to run reNgine . reNgine requires these tools to be installed before you begin any installation steps:","title":"Prerequisites"},{"location":"pentester/install/#docker","text":"Docker provides very good documentation on how to install docker based on your Operating System. You can follow the documentation here.","title":"Docker"},{"location":"pentester/install/#docker-installation-on-ubuntulinux-distributions","text":"Warning The installation steps have been directly taken from Docker Guide with no modification. Update the apt package index and install the below packages sudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common Add Docker official GPG key curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Use the following commands to setup the stable repository sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" Finally install Docker Engine sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io Test the Docker by running docker command on your console/terminal.","title":"Docker installation on Ubuntu/Linux Distributions"},{"location":"pentester/install/#docker-installation-on-windows","text":"Docker requires Docker Desktop to be installed on your Windows OS. Installing Docker Desktop is as easy as double clicking the InstallDocker.msi installer, downloaded from here .","title":"Docker installation on Windows"},{"location":"pentester/install/#docker-installation-on-mac-os","text":"Docker requires Docker Desktop to be installed on your Mac OS. Follow the instruction from Docker hub to install Docker on Mac OS .","title":"Docker installation on Mac OS"},{"location":"pentester/install/#docker-installation-on-windows-wsl","text":"Nick Janetakis has a well written blog and a Video guide on how to install Docker on Windows Subsystem Linux . Please follow the video/blog guide on how to install Docker on WSL.","title":"Docker installation on Windows WSL"},{"location":"pentester/install/#docker-compose","text":"If you're running Docker Desktop you can skip installing docker-compose as docker-compose comes along with Docker Desktop. This applies for both Windows and Mac OS users. If you're using Linux distributions or WSL, you will still need to install docker-compose and the installation steps are similar.","title":"Docker Compose"},{"location":"pentester/install/#installing-docker-compose-on-linux-systems","text":"Download the latest stable version of docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Apply executable permission sudo chmod +x /usr/local/bin/docker-compose Create a symbolic link sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Verify your installation by running docker-compose --version Info If curl is not working for some reason, there are alternate installation steps as well. You can use pip or install as a container. Follow the alternate installation steps .","title":"Installing docker-compose on Linux systems"},{"location":"pentester/install/#make","text":"","title":"make"},{"location":"pentester/install/#make-installation-on-linux-distributions","text":"Install the latest version of make using sudo apt install make Although it is optional, build-essential package can also be installed which contains make utility. sudo apt install build-essential","title":"make installation on Linux Distributions"},{"location":"pentester/install/#rengine-installation","text":"Installing reNgine on your favourite VPS or on your local machine is pretty straight forward process. Installation instruction for VPS and local machine is similar and same steps can be followed. If you have met all the above Prerequisites , you can begin installing reNgine . Let's begin by cloning the reNgine . git clone https://github.com/yogeshojha/rengine cd rengine There are currently two different ways of installing reNgine . Using make Manually using docker-compose Using make is by far the easiest way to setup reNgine without encountering any errors. Using docker-compose is a tidious process and is only intended for development purpose. Unless otherwise you're developing reNgine , it is recommended that you use make to install reNgine . Installation steps using docker-compose can be found in Developer's section.","title":"reNgine Installation"},{"location":"pentester/install/#dotenv-file","text":"Before we begin installing reNgine, it is necessary to make changes to the dotenv file. You can edit the file using your favourite editor nano .env or vim .env The sample .env file can be found here . # # General # COMPOSE_PROJECT_NAME=rengine # # SSL specific configuration # AUTHORITY_NAME=reNgine AUTHORITY_PASSWORD=mySecurePassword COMPANY=reNgine DOMAIN_NAME=recon.example.com COUNTRY_CODE=IN STATE=Karnataka CITY=Bangalore","title":"dotenv file"},{"location":"pentester/install/#generating-ssl-certificates","text":"reNgine runs on https unless otherwise used for development purpose. So using https is recommended. To generate the certificates you can use make certs Please note, while running any make command, you must be inside the rengine/ directory.","title":"Generating SSL Certificates"},{"location":"pentester/install/#build-rengine","text":"To build the reNgine, use the following command make build The build process is a lengthy process and may take some time. Thanks to Baptiste MOINE for sending the PR that made build process so much simpler.","title":"Build reNgine"},{"location":"pentester/install/#run-rengine","text":"Once the build process is successful, we're good to run reNgine. This can be done using below command make up reNgine can now be accessed from https://127.0.0.1 or if you're on the VPS https://your_vps_ip_address","title":"Run reNgine"},{"location":"pentester/install/#registering-an-account","text":"The recent upgrade bring authentication feature on reNgine. You will need to create a username and password in order to login to the reNgine. To register reNgine, you will need to run the following command make username You will now be prompted with some personal details(optional), username and password. We highly recommend that you set a strong password for reNgine. You may now login to the reNgine web portal using the username and password that you just provided.","title":"Registering an account"},{"location":"pentester/install/#checking-logs","text":"If you need to observe the logs, it can be done so by running the commmand make logs Note If you encounter any issues while setup or scan, we advice you to raise an issue in Github and attach the log. While raising any new issues on Github, it is also adviced that you to look for any open issues on Github as well.","title":"Checking logs"},{"location":"pentester/install/#stopping-the-rengine","text":"If you wish to stop the reNgine, it can be done so by using the command make stop","title":"Stopping the reNgine"},{"location":"pentester/install/#restarting-the-rengine","text":"reNgine can be restarted using the command make restart","title":"Restarting the reNgine"},{"location":"pentester/install/#removing-all-the-rengine-data","text":"If you wish to delete all your recon data, it can be done using Danger This is a irreversible process and once pruned, you may never get back your recon data. Use with caution. make prune","title":"Removing all the reNgine Data"},{"location":"pentester/scan_engine/","text":"","title":"Scan engine"},{"location":"pentester/usage/","text":"Using reNgine About this document This document will provide the detailed instructions on how to use reNgine. If you are looking for installation instructions and want to ensure if you have met the prerequisites, we suggest you to look at the installation instructions and prerequisites sections. Targets Target could be a domain or a subdomain, that you can run the scan against. Having a target is a must and a basic requirement to run any scan. Support for IP address as a target is coming soon. Adding Targets To add the Target , navigate to the left sidebar menu and click on Add Target submenu. Using this option, you can add one target at a time, for importing multiple targets, follow the Importing Targets guide. Importing Targets reNgine provides the ability to import multiple targets. To import multiple targets, click on the Import Targets options from Targets menu. File extension support reNgine currently supports importing targets only from .txt and .csv files. Importing Targets from txt file Please note that the txt file must only contain domain names or subdomain names. Any other format will be rejected by rengine. Supported txt Format hackerone.com docs.hackerone.com nepal.gov.np UnSupported txt Format https://hackerone.com https://docs.hackerone.com nepal.gov.np/docs Importing Targets from csv file reNgine also provides an option to import targets from a csv file. The csv file contents must be in the form of domain/subdomain_name,Description Having description is optional in csv format. Supported CSV Format hackerone.com docs.hackerone.com, Hackerone Docs nepal.gov.np, Nepal Government Bug Bounty UnSupported CSV Format https://hackerone.com, Hackerone, Target https://docs.hackerone.com Configurations Tools like amass and subfinder uses configuration files to unleash the power of these tools. These configuration files often contains API keys, and other configurations used to gather more accurate results. reNgine provides the ability to upload your configuration files for various tools and use them in the scan engines. Adding new Configurations To add the Configurations , select the Configurations menu from left sidebar and click on Add new Configuration . Fields Configuration Name : The configuration name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Actual Configuration : Paste your actual configuration. TIP: Sample Configurations If you have difficulty setting up the config file, you can find the sample config files below. Subfinder Configuration Amass Configuration Using the config file in Scan Engine will be discussed in the Setting up Scan Engine section. Wordlist Tools like dirsearch or amass uses wordlist to bruteforce the directories or subdomains. reNgine provides the ability to upload your own wordlists. Adding new Wordlist To upload your Wordlists , selection the Wordlists menu from left sidebar and click on Add new Wordlist . Fields Wordlist Name : The Wordlist name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Upload your wordlist in txt file format. Using the wordlist in Scan Engine will be discussed in the Setting up Scan Engine section. Common Wordlists Some of the common wordlists for your scans. * Seclists * Jason Haddix DNS Enumeration wordlist * Jason Haddix Content Discovery wordlist Default Wordlist reNgine also has default wordlist called deepmagic top 5000 prefix, which can be referenced in scan engines using wordlist: default Scan Engines One of the core components of reNgine is Scan Engine. Scan Engines lets you define the type of scan you wish to perform along with the ability to choose the tools, and dive deep into the configurations using the YAML configuration. You can define as many scan engines as you want, with the type of configurations you wish. Scan Engines are capable of performing: reNgine Scan Engine capabilities Subdomain Discovery : Discovers all the subdomains using tools like sublist3r, subfinder, amass, assetfinder, etc. Port Scan : Use to identify the open ports on the subdomains that have been discovered. Currently reNgine uses naabu to check for open ports. We have plans to use masscan in the future. Directory and File Search : Uses dirsearch to discover the directories and files. Fetch all Endpoints : Fetches all the urls for each subdomains from various sources like Open Threat Exchange, Wayback machine, common crawl etc. reNgine uses gau , hakrawler to fetch the endpoints. Vulnerability Scan (Beta) : reNgine uses nuclei to perform the Vulnerability Scans on the targets. Default Engines in reNgine Default Scan Engines reNgine comes with 3 preinstalled Scan Engines, namely Full Scan , Passive Scan and Subdomain only scan Full Scan This scan engine will perform all the capabilities of reNgine, namely Subdomain Discovery, Port Scan, Directory and File search, Fetch all endpoints, Vulnerability Scan. Running a Full Scan will take more time compared to other scans. Passive Scan This scan engine will perform only the passive scan , namely Subdomain Discovery, and will Fetch all endpoints. Active scanning like Port Scan, Directory and File Search is disabled. Also, no vulnerability scan will be performed. Subdomain only scan This scan engine will perform only the Subdomain Scan, all other capabilities are disabled. Defining new Scan Engines To define a new Scan Engine in reNgine, click on Scan Engine menu from left sidebar and the click on Add New Engine button. Add new Scan Engine Fields Engine Name : Name of the Engine YAML Configuration : YAML Initiating Scan Scheduling Scan Periodic Scan Clocked Scan Vulnerability Scan Notification","title":"Using reNgine"},{"location":"pentester/usage/#using-rengine","text":"About this document This document will provide the detailed instructions on how to use reNgine. If you are looking for installation instructions and want to ensure if you have met the prerequisites, we suggest you to look at the installation instructions and prerequisites sections.","title":"Using reNgine"},{"location":"pentester/usage/#targets","text":"Target could be a domain or a subdomain, that you can run the scan against. Having a target is a must and a basic requirement to run any scan. Support for IP address as a target is coming soon.","title":"Targets"},{"location":"pentester/usage/#adding-targets","text":"To add the Target , navigate to the left sidebar menu and click on Add Target submenu. Using this option, you can add one target at a time, for importing multiple targets, follow the Importing Targets guide.","title":"Adding Targets"},{"location":"pentester/usage/#importing-targets","text":"reNgine provides the ability to import multiple targets. To import multiple targets, click on the Import Targets options from Targets menu. File extension support reNgine currently supports importing targets only from .txt and .csv files.","title":"Importing Targets"},{"location":"pentester/usage/#importing-targets-from-txt-file","text":"Please note that the txt file must only contain domain names or subdomain names. Any other format will be rejected by rengine. Supported txt Format hackerone.com docs.hackerone.com nepal.gov.np UnSupported txt Format https://hackerone.com https://docs.hackerone.com nepal.gov.np/docs","title":"Importing Targets from txt file"},{"location":"pentester/usage/#importing-targets-from-csv-file","text":"reNgine also provides an option to import targets from a csv file. The csv file contents must be in the form of domain/subdomain_name,Description Having description is optional in csv format. Supported CSV Format hackerone.com docs.hackerone.com, Hackerone Docs nepal.gov.np, Nepal Government Bug Bounty UnSupported CSV Format https://hackerone.com, Hackerone, Target https://docs.hackerone.com","title":"Importing Targets from csv file"},{"location":"pentester/usage/#configurations","text":"Tools like amass and subfinder uses configuration files to unleash the power of these tools. These configuration files often contains API keys, and other configurations used to gather more accurate results. reNgine provides the ability to upload your configuration files for various tools and use them in the scan engines.","title":"Configurations"},{"location":"pentester/usage/#adding-new-configurations","text":"To add the Configurations , select the Configurations menu from left sidebar and click on Add new Configuration . Fields Configuration Name : The configuration name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Actual Configuration : Paste your actual configuration. TIP: Sample Configurations If you have difficulty setting up the config file, you can find the sample config files below. Subfinder Configuration Amass Configuration Using the config file in Scan Engine will be discussed in the Setting up Scan Engine section.","title":"Adding new Configurations"},{"location":"pentester/usage/#wordlist","text":"Tools like dirsearch or amass uses wordlist to bruteforce the directories or subdomains. reNgine provides the ability to upload your own wordlists.","title":"Wordlist"},{"location":"pentester/usage/#adding-new-wordlist","text":"To upload your Wordlists , selection the Wordlists menu from left sidebar and click on Add new Wordlist . Fields Wordlist Name : The Wordlist name for you to identify. Short Name : The short name is automatically generated, though you have an option to change it. The short name is an identifier to the config file, that will be used to reference in the Scan Engine YAML Configuration . Upload your wordlist in txt file format. Using the wordlist in Scan Engine will be discussed in the Setting up Scan Engine section. Common Wordlists Some of the common wordlists for your scans. * Seclists * Jason Haddix DNS Enumeration wordlist * Jason Haddix Content Discovery wordlist Default Wordlist reNgine also has default wordlist called deepmagic top 5000 prefix, which can be referenced in scan engines using wordlist: default","title":"Adding new Wordlist"},{"location":"pentester/usage/#scan-engines","text":"One of the core components of reNgine is Scan Engine. Scan Engines lets you define the type of scan you wish to perform along with the ability to choose the tools, and dive deep into the configurations using the YAML configuration. You can define as many scan engines as you want, with the type of configurations you wish. Scan Engines are capable of performing: reNgine Scan Engine capabilities Subdomain Discovery : Discovers all the subdomains using tools like sublist3r, subfinder, amass, assetfinder, etc. Port Scan : Use to identify the open ports on the subdomains that have been discovered. Currently reNgine uses naabu to check for open ports. We have plans to use masscan in the future. Directory and File Search : Uses dirsearch to discover the directories and files. Fetch all Endpoints : Fetches all the urls for each subdomains from various sources like Open Threat Exchange, Wayback machine, common crawl etc. reNgine uses gau , hakrawler to fetch the endpoints. Vulnerability Scan (Beta) : reNgine uses nuclei to perform the Vulnerability Scans on the targets.","title":"Scan Engines"},{"location":"pentester/usage/#default-engines-in-rengine","text":"Default Scan Engines reNgine comes with 3 preinstalled Scan Engines, namely Full Scan , Passive Scan and Subdomain only scan Full Scan This scan engine will perform all the capabilities of reNgine, namely Subdomain Discovery, Port Scan, Directory and File search, Fetch all endpoints, Vulnerability Scan. Running a Full Scan will take more time compared to other scans. Passive Scan This scan engine will perform only the passive scan , namely Subdomain Discovery, and will Fetch all endpoints. Active scanning like Port Scan, Directory and File Search is disabled. Also, no vulnerability scan will be performed. Subdomain only scan This scan engine will perform only the Subdomain Scan, all other capabilities are disabled.","title":"Default Engines in reNgine"},{"location":"pentester/usage/#defining-new-scan-engines","text":"To define a new Scan Engine in reNgine, click on Scan Engine menu from left sidebar and the click on Add New Engine button. Add new Scan Engine Fields Engine Name : Name of the Engine YAML Configuration : YAML","title":"Defining new Scan Engines"},{"location":"pentester/usage/#initiating-scan","text":"","title":"Initiating Scan"},{"location":"pentester/usage/#scheduling-scan","text":"","title":"Scheduling Scan"},{"location":"pentester/usage/#periodic-scan","text":"","title":"Periodic Scan"},{"location":"pentester/usage/#clocked-scan","text":"","title":"Clocked Scan"},{"location":"pentester/usage/#vulnerability-scan","text":"","title":"Vulnerability Scan"},{"location":"pentester/usage/#notification","text":"","title":"Notification"}]}